This is where we can break the project down into parts, functions, and come up with an approach. 
We can also use this to decided whose writing which functions.
Here's what I've come up with so far:  (from the assignment sheet)



- read from a file
       - open it (and error states)
       - read in one char, up to a comma, multiple comma-separated tokens, multiple tokens with interspersed noise (spaces, newlines..)
       - read on char at a time (optionally, read in n chars and extract tokens from the buffer)
- sorts
	- code linked lists
   	- code sequential sort first (it is simple)
	- write sorts on linked lists of numbers
	- duplicate code and change type/functions to work on linked lists of numbers
- function pointers
  	- write an integer and a string comparator
	- generalize the input types to be void*, but cast them inside the function
	- copy/paste sort code and modify it to accept your comparators



Questions for Fransisco:

are we only expected to read in numbers and letters as input?

If other characters are allowed, how do we differentiate between characters to be skipped over (like the space or tab characters) and others, like: * & ^ $ # @ ect.

The two function prototypes are different, even though you said they appaear to be the same.... Is there a mistake?